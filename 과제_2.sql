--문제 1 영문학과(학과코드002) 학생들을 입학년도가 빠른 순으로 표시 별칭을 지정해서
SELECT STUDENT_NO"학번",STUDENT_NAME"이름",TO_CHAR(ENTRANCE_DATE,'RRRR-MM-DD')"입학년도"
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '002'
ORDER BY ENTRANCE_DATE ;

--문제 2번 교수들의 이름중 세글자가 아닌 교수 한명이 있다
-- 해당 교수의 이름 / 주민번호
SELECT PROFESSOR_NAME,PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE  3 != LENGTH(PROFESSOR_NAME);

--문제 3번 남성 교수의 이름과 나이를 출력
-- 이때 나이 오름차순으로 정렬 나이는 만으로 계산
--TO_CHAR(SYSDATE,'YYYY')
SELECT PROFESSOR_NAME 교수이름, 
FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE('19' || SUBSTR(PROFESSOR_SSN, 1, 6), 'YYYYMMDD')) / 12 ) 나이
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN, 8, 1) = '1'
ORDER BY 2;

--문제 4번 교수들의 이름 중 성을 제외한 이름을 출력  (성이 2자인 교수는 X)
SELECT SUBSTR(PROFESSOR_NAME,2,LENGTH(PROFESSOR_NAME)) AS "이름"
FROM TB_PROFESSOR; 


--문제 5번 재수입학자 , 19살에 입학시 재수자가 아님
SELECT STUDENT_NO,STUDENT_NAME,
TO_CHAR(ENTRANCE_DATE,'YYYY')-
TO_CHAR(TO_DATE(SUBSTR(STUDENT_SSN,1,2),'RRRR'),'RRRR')"입학나이"
FROM TB_STUDENT
WHERE TO_CHAR(ENTRANCE_DATE,'YYYY')-
TO_CHAR(TO_DATE(SUBSTR(STUDENT_SSN,1,2),'RRRR'),'RRRR')  LIKE '20%';


--문제 6번 2020년 크리스마스는 무슨 요일인가
SELECT TO_CHAR(TO_DATE('201225','YYMMDD'),'DY')||'요일'"요일" ,TO_DATE('201225','YYMMDD')
FROM DUAL;

--문제 7번 각각 몇년 몇월 몇일을 의미하는가 RRRR과 YYYY의 이해
/*
1) TO_DATE('99/10/11','YY/MM/DD') : 2099년 10월 11일
2) TO_DATE('49/10/11','YY/MM/DD') : 2049년 10월 11일

3) TO_DATE('99/10/11','RR/MM/DD') : 1999년 10월 11일
4) TO_DATE('49/10/11','RR/MM/DD') : 2049년 10월 11일
*/

-- YYYY는 20세기를 표현 
-- RRRR은 50미만은 20세기를 50이상은 19세기로 표현
SELECT 
TO_DATE('99/10/11','YY/MM/DD'),
TO_DATE('49/10/11','YY/MM/DD'),
TO_DATE('99/10/11','RR/MM/DD'),
TO_DATE('49/10/11','RR/MM/DD')
FROM DUAL;



--8번 문제 2000년도 이후 입학자들은 학번이 A로 시작한다
--  2000년도 이전 학번을 받은 학생들의 학번과 이름
SELECT STUDENT_NO,STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO NOT LIKE 'A%';


--9번 문제 학번이 A517178인 한아름 학생의 학점 총 평점을 구하는 SQL문을 작성
-- 이때 별칭을 '평점' 점수는 반올림하여 소수점 이하 한자리 까지만 출력
SELECT ROUND(AVG(POINT),1)
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
WHERE STUDENT_NO = 'A517178' AND STUDENT_NAME='한아름';


--10번 문제 학과별 학생수르 구해 학과번호 / 학생수(명)으로 출력
SELECT DEPARTMENT_NO"학과번호",COUNT(*)"학생수(명)"
FROM TB_DEPARTMENT
JOIN TB_STUDENT USING(DEPARTMENT_NO)
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

--11번 문제 지도 교수를 배정받지 못한 학생의 수
SELECT COUNT(*)
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;


--12번 문제 학번A112113 김고운 학생의 년도별 평점을 구해라
--  이때 별칭은 '년도',년도별 평점' 점수는 반올림해 소수점 한자리 수 까지만 출력
SELECT SUBSTR(TERM_NO,1,4)년도,ROUND(AVG(POINT),1)AS"년도 별 평점"
FROM TB_GRADE
JOIN TB_STUDENT USING(STUDENT_NO)
WHERE STUDENT_NAME ='김고운' AND STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO,1,4)
ORDER BY 년도;


--13번 문제 학과별 휴학생의 수를 파악 
SELECT DEPARTMENT_NO AS"학과번호",COUNT(DECODE(ABSENCE_YN, 'Y' , 'Y'))AS "휴학생 수"
FROM TB_STUDENT 
GROUP BY DEPARTMENT_NO
ORDER BY "학과번호"; 

--14번 문제 동명이인 학생들의 이름을 찾아라
SELECT M.STUDENT_NAME"동일이름",COUNT(*)"동명인 수"
FROM TB_STUDENT M
JOIN TB_STUDENT S ON(M.STUDENT_NAME = S.STUDENT_NAME)
WHERE M.STUDENT_NAME = S.STUDENT_NAME AND M.STUDENT_NO != S.STUDENT_NO
GROUP BY M.STUDENT_NAME
ORDER BY 1;


--15번 문제 A112113김고운 학생의 년도,학기별 누적 평점 
SELECT NVL(SUBSTR(TERM_NO,1,4),' ')"년도" ,NVL(SUBSTR(TERM_NO,5,6),' ')AS"학기", ROUND(AVG(POINT),1)AS"평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP(SUBSTR(TERM_NO,1,4),SUBSTR(TERM_NO,5,6))
ORDER BY (CASE WHEN ' ' = NULL THEN 1 ELSE 2 END); 